
/******************************  LICENSE  *******************************

 * (C) Copyright 1996-2017 ECMWF.
 *
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
 * In applying this licence, ECMWF does not waive the privileges and immunities
 * granted to it by virtue of its status as an intergovernmental organisation nor
 * does it submit to any jurisdiction.

 *******************************  LICENSE  *******************************/

/*! \\file ContourLibraryAttributes.h
    \\brief Definition of ContourLibrary Attributes class.

    This file is automatically generated.
    Do Not Edit!

*/

#include "MagRequest.h"
#include "ContourLibraryWrapper.h"
#include "MagicsParameter.h"
#include "Factory.h"
#include "MagTranslator.h"
#include "MagicsGlobal.h"

using namespace magics;



ContourLibraryWrapper::ContourLibraryWrapper(): contourlibrary_(new ContourLibrary())


{


	

}
ContourLibraryWrapper::ContourLibraryWrapper(ContourLibrary* contourlibrary): contourlibrary_(contourlibrary)
{

	
}

ContourLibraryWrapper::~ContourLibraryWrapper()
{

}

void ContourLibraryWrapper::set(const MagRequest& request)
{

	

	if  (request.countValues("CONTOUR_PREDEFINED_SETTING") ) {
		string predefined_value = request("CONTOUR_PREDEFINED_SETTING");
		contourlibrary_->predefined_ = predefined_value;
		}
	if  (request.countValues("CONTOUR_AUTOMATIC_LIBRARY_PATH") ) {
		string library_path_value = request("CONTOUR_AUTOMATIC_LIBRARY_PATH");
		contourlibrary_->library_path_ = library_path_value;
		}
	
	
}

void ContourLibraryWrapper::print(ostream& out)  const
{
	out << "ContourLibraryWrapper[]";
}


