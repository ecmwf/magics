
/******************************  LICENSE  *******************************

 * (C) Copyright 1996-2017 ECMWF.
 *
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
 * In applying this licence, ECMWF does not waive the privileges and immunities
 * granted to it by virtue of its status as an intergovernmental organisation nor
 * does it submit to any jurisdiction.

 *******************************  LICENSE  *******************************/

/*! \\file GridShadingAttributes.h
    \\brief Definition of GridShading Attributes class.

    This file is automatically generated.
    Do Not Edit!

*/

#include "MagRequest.h"
#include "GridShadingWrapper.h"
#include "MagicsParameter.h"
#include "Factory.h"
#include "MagTranslator.h"
#include "MagicsGlobal.h"

using namespace magics;



GridShadingWrapper::GridShadingWrapper(): gridshading_(new GridShading())


{


	
	PolyShadingTechniqueWrapper::object(gridshading_);
	

}
GridShadingWrapper::GridShadingWrapper(GridShading* gridshading): gridshading_(gridshading)
{

	
	PolyShadingTechniqueWrapper::object(gridshading_);
	
}

GridShadingWrapper::~GridShadingWrapper()
{

}

void GridShadingWrapper::set(const MagRequest& request)
{

	

	PolyShadingTechniqueWrapper::set(request);
	

	if  (request.countValues("CONTOUR_GRID_SHADING_POSITION") ) {
		string position_value = request("CONTOUR_GRID_SHADING_POSITION");
		gridshading_->position_ = position_value;
		}
	
	
}

void GridShadingWrapper::print(ostream& out)  const
{
	out << "GridShadingWrapper[]";
}


