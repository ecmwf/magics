
/******************************  LICENSE  *******************************

 * (C) Copyright 1996-2017 ECMWF.
 * 
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0. 
 * In applying this licence, ECMWF does not waive the privileges and immunities 
 * granted to it by virtue of its status as an intergovernmental organisation nor
 * does it submit to any jurisdiction.

 *******************************  LICENSE  *******************************/

/*! \\file ImportActionAttributes.h
    \\brief Definition of ImportAction Attributes class.

    This file is automatically generated.
    Do Not Edit!
*/

#include "MagRequest.h" 
#include "ImportActionWrapper.h"
#include "MagicsParameter.h"
#include "Factory.h"
#include "MagTranslator.h"

using namespace magics;


ImportActionWrapper::ImportActionWrapper(): importaction_(new ImportAction())

{

	
	
	
} 
ImportActionWrapper::ImportActionWrapper(ImportAction* importaction): importaction_(importaction)
{
	
	
} 

ImportActionWrapper::~ImportActionWrapper()
{
	
}

void ImportActionWrapper::set(const MagRequest& request)
{
	
	

	if  (request.countValues("IMPORT_FILE_NAME") ) {
		string path_value = request("IMPORT_FILE_NAME");
		importaction_->path_ = path_value;
		}
	if  (request.countValues("IMPORT_VALID_TIME") ) {
		string valid_time_value = request("IMPORT_VALID_TIME");
		importaction_->valid_time_ = valid_time_value;
		}
	if  (request.countValues("SERVICE") ) {
		string service_value = request("SERVICE");
		importaction_->service_ = service_value;
		}
	if  (request.countValues("URL") ) {
		string url_value = request("URL");
		importaction_->url_ = url_value;
		}
	if  (request.countValues("LAYERS") ) {
		string short_name_value = request("LAYERS");
		importaction_->short_name_ = short_name_value;
		}
	
	
}

void ImportActionWrapper::print(ostream& out)  const
{
	out << "ImportActionWrapper[]";
}


    



