
/*******************************  LICENSE  *******************************

 * (C) Copyright 1996-2016 ECMWF.
 * 
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0. 
 * In applying this licence, ECMWF does not waive the privileges and immunities 
 * granted to it by virtue of its status as an intergovernmental organisation nor
 * does it submit to any jurisdiction.

 *******************************  LICENSE  *******************************/

/*! \fileHiLoMarkerAttributes.h
    \brief Definition of HiLoMarker Attributes class.

    This file is automatically generated.
    Do Not Edit!

    Generated: 
*/
   

#ifndef HiLoMarkerWrapper_H
#define HiLoMarkerWrapper_H

#include "magics.h"
#include "ParameterManager.h"
#include "Factory.h"



#include "HiLoMarker.h"


 
#include "HiLoMarkerBaseWrapper.h"






 

namespace magics {

class MagRequest;


class HiLoMarkerWrapper: public HiLoMarkerBaseWrapper

{
public:
//  --  constructor
    HiLoMarkerWrapper();
    HiLoMarkerWrapper(HiLoMarker*);
//  --  destructor
    virtual ~HiLoMarkerWrapper();
    virtual void set(const MagRequest&);
    
    HiLoMarker* me()   { return hilomarker_; }
   	
   	virtual HiLoMarker* object() { return hilomarker_; }
	

	virtual void object(HiLoMarker* o) { 
		// Remember to delete the previous object
		hilomarker_ = o;
		HiLoMarkerBaseWrapper::object(o);
		

	}
    
  

protected:
    HiLoMarker* hilomarker_;


//  --  method
	virtual void print(ostream&) const;
	

private:
    string tag_;
	friend ostream& operator<<(ostream& s,const HiLoMarkerWrapper& p)
	{ p.print(s); return s; }
};

} // namespace magics

#endif


