
/******************************  LICENSE  *******************************

 * (C) Copyright 1996-2017 ECMWF.
 *
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
 * In applying this licence, ECMWF does not waive the privileges and immunities
 * granted to it by virtue of its status as an intergovernmental organisation nor
 * does it submit to any jurisdiction.

 *******************************  LICENSE  *******************************/

/*! \\file GeoJSonAttributes.h
    \\brief Definition of GeoJSon Attributes class.

    This file is automatically generated.
    Do Not Edit!

*/

#include "MagRequest.h"
#include "GeoJSonWrapper.h"
#include "MagicsParameter.h"
#include "Factory.h"
#include "MagTranslator.h"
#include "MagicsGlobal.h"

using namespace magics;



GeoJSonWrapper::GeoJSonWrapper(): geojson_(new GeoJSon())


{


	

}
GeoJSonWrapper::GeoJSonWrapper(GeoJSon* geojson): geojson_(geojson)
{

	
}

GeoJSonWrapper::~GeoJSonWrapper()
{

}

void GeoJSonWrapper::set(const MagRequest& request)
{

	

	if  (request.countValues("GEOJSON_INPUT_TYPE") ) {
		string type_value = request("GEOJSON_INPUT_TYPE");
		geojson_->type_ = type_value;
		}
	if  (request.countValues("GEOJSON_INPUT_FILENAME") ) {
		string path_value = request("GEOJSON_INPUT_FILENAME");
		geojson_->path_ = path_value;
		}
	if  (request.countValues("GEOJSON_INPUT") ) {
		string input_value = request("GEOJSON_INPUT");
		geojson_->input_ = input_value;
		}
	if  (request.countValues("GEOJSON_BINNING_GRID_RESOLUTION") ) {
		double binning_resolution_value = request("GEOJSON_BINNING_GRID_RESOLUTION");
		geojson_->binning_resolution_ = binning_resolution_value;
		}
	
	
}

void GeoJSonWrapper::print(ostream& out)  const
{
	out << "GeoJSonWrapper[]";
}


