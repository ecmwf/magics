
/******************************  LICENSE  *******************************

 * (C) Copyright 1996-2017 ECMWF.
 * 
 * This software is licensed under the terms of the Apache Licence Version 2.0
 * which can be obtained at http://www.apache.org/licenses/LICENSE-2.0. 
 * In applying this licence, ECMWF does not waive the privileges and immunities 
 * granted to it by virtue of its status as an intergovernmental organisation nor
 * does it submit to any jurisdiction.

 *******************************  LICENSE  *******************************/

/*! \\file LevelListSelectionTypeAttributes.h
    \\brief Definition of LevelListSelectionType Attributes class.

    This file is automatically generated.
    Do Not Edit!
*/

#include "MagRequest.h" 
#include "LevelListSelectionTypeWrapper.h"
#include "MagicsParameter.h"
#include "Factory.h"
#include "MagTranslator.h"

using namespace magics;


LevelListSelectionTypeWrapper::LevelListSelectionTypeWrapper(): levellistselectiontype_(new LevelListSelectionType())

{

	
	
	LevelSelectionWrapper::object(levellistselectiontype_);
	
	
} 
LevelListSelectionTypeWrapper::LevelListSelectionTypeWrapper(LevelListSelectionType* levellistselectiontype): levellistselectiontype_(levellistselectiontype)
{
	
	
	LevelSelectionWrapper::object(levellistselectiontype_);
	
} 

LevelListSelectionTypeWrapper::~LevelListSelectionTypeWrapper()
{
	
}

void LevelListSelectionTypeWrapper::set(const MagRequest& request)
{
	
	
	
	LevelSelectionWrapper::set(request);
	

	doublearray  list_value;
	for (int i = 0; i < request.countValues("CONTOUR_LEVEL_LIST"); i++)
		list_value.push_back((double)request("CONTOUR_LEVEL_LIST", i));
	if ( !list_value.empty() ) 
		levellistselectiontype_->list_ = list_value;
	
	
}

void LevelListSelectionTypeWrapper::print(ostream& out)  const
{
	out << "LevelListSelectionTypeWrapper[]";
}


    



